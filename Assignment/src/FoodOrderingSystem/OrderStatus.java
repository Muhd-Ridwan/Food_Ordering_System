
package FoodOrderingSystem;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.table.DefaultTableModel;

public class OrderStatus extends javax.swing.JFrame implements MyInterface{

    private String orderId;
    private String vendorId;
    private String drid;
    private String customerId;
    private String amount;
    private String deliveryFee;
    private String status;
    private String remarks;
    private String hwManyFoodOrdered;
    private String orderIdToCancel;
    
    /**
     * Creates new form OrderStatus
     */
    public OrderStatus() {
        addRowSelectionListener();
        initComponents();
    }
    
    public OrderStatus(String CID){
        initComponents();
        this.customerId = CID;
        addRowSelectionListener();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        OrderStat = new javax.swing.JTable();
        CloseBtn = new javax.swing.JButton();
        CancelOrderBtn = new javax.swing.JButton();
        AppsNameLbl = new javax.swing.JLabel();
        AppsNameLbl1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Order Status");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        OrderStat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Vendor ID", "DRID", "Customer ID", "Amount", "Delivery Fees", "Status", "Remarks"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        OrderStat.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(OrderStat);
        if (OrderStat.getColumnModel().getColumnCount() > 0) {
            OrderStat.getColumnModel().getColumn(0).setResizable(false);
            OrderStat.getColumnModel().getColumn(1).setResizable(false);
            OrderStat.getColumnModel().getColumn(2).setResizable(false);
            OrderStat.getColumnModel().getColumn(3).setResizable(false);
            OrderStat.getColumnModel().getColumn(4).setResizable(false);
            OrderStat.getColumnModel().getColumn(5).setResizable(false);
            OrderStat.getColumnModel().getColumn(6).setResizable(false);
            OrderStat.getColumnModel().getColumn(7).setResizable(false);
        }

        CloseBtn.setText("Close");
        CloseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseBtnActionPerformed(evt);
            }
        });

        CancelOrderBtn.setBackground(new java.awt.Color(255, 51, 51));
        CancelOrderBtn.setText("Cancel Order");
        CancelOrderBtn.setOpaque(true);
        CancelOrderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelOrderBtnActionPerformed(evt);
            }
        });

        AppsNameLbl.setFont(new java.awt.Font("STCaiyun", 1, 48)); // NOI18N
        AppsNameLbl.setText("MAKAN");

        AppsNameLbl1.setFont(new java.awt.Font("STCaiyun", 1, 48)); // NOI18N
        AppsNameLbl1.setText("JOM");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CloseBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(CancelOrderBtn)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 786, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(348, 348, 348)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(34, 34, 34)
                                        .addComponent(AppsNameLbl1))
                                    .addComponent(AppsNameLbl))))
                        .addGap(0, 67, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(AppsNameLbl1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AppsNameLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CancelOrderBtn)
                .addGap(12, 12, 12)
                .addComponent(CloseBtn)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void refreshData(){
        try{
            String read;
            FileReader fr = new FileReader("Order Status.txt");
            
            // Prevent Glitch from file use BufferedReader
            BufferedReader br = new BufferedReader(fr);
            
               
            // To start use the JTable use DefaultTableModel
            DefaultTableModel model = (DefaultTableModel) OrderStat.getModel();
            model.setRowCount(0);
            
            while((read = br.readLine()) != null ){
                String[] data = read.split(";");


                this.orderId = read.split(";")[0];
                this.vendorId = read.split(";")[1];
                this.drid = read.split(";")[2];
                String tempCustId = read.split(";")[3];
                this.amount = read.split(";")[8];
                this.deliveryFee = read.split(";")[9];
                this.hwManyFoodOrdered = data[10];
                this.status = read.split(";")[11];
                this.remarks = read.split(";")[12];

                //EXTRACTING CART TEXT WITH SAME CUSTOMER ID
                if(this.customerId.equals(tempCustId) && this.status.equalsIgnoreCase("Preparing")){
                    // ADD DATA FROM FILE INTO TABLE
                    model.addRow(new Object[]{
                        this.orderId, this.vendorId, this.drid, this.customerId, this.amount, this.deliveryFee, this.status, this.remarks
                    });
                }                    
            }
            br.close();
        }catch(IOException e){
            JOptionPane.showMessageDialog(null, e, "System", JOptionPane.WARNING_MESSAGE);
        }
    }
    
    private void addRowSelectionListener(){
        OrderStat.getSelectionModel().addListSelectionListener((ListSelectionEvent e)->{
            if(!e.getValueIsAdjusting()){
                int selectedRow = OrderStat.getSelectedRow();
                if(selectedRow != -1) {
                    this.orderIdToCancel = (String) OrderStat.getValueAt(selectedRow,0);
                    System.out.println("Order ID: " + orderIdToCancel);
                }
            }
        });
    }
    
    
    private void ChangeToCancelInOrderStatTxtIfCancel(String fileName, String selectedOrderID, int columnIndex) {
        File inputFile = new File(fileName);
        File tempFile = new File("Temp_Order_Status.txt");
        boolean isOrderFound = false;

        try (BufferedReader br = new BufferedReader(new FileReader(inputFile));
             BufferedWriter bw = new BufferedWriter(new FileWriter(tempFile))) {

            String line;
            System.out.println("Selected Order ID for Cancellation: " + selectedOrderID);

            while ((line = br.readLine()) != null) {
                String[] columns = line.split(";");

                if (columns.length > 11) {
                    System.out.println("Processing Order ID: " + columns[columnIndex]);

                    // Jika status masih "Preparing", tukar ke "Cancelled"
                    if (columns[11].trim().equalsIgnoreCase("Preparing")) {
                        columns[11] = "Cancelled";
                        isOrderFound = true;
                        System.out.println("Order ID " + selectedOrderID + " status changed to Cancelled.");
                    }
                }

                // Tulis ke fail sementara
                bw.write(String.join(";", columns));
                bw.newLine();
            }
        } catch (IOException e) {
            System.out.println("Error in reading or writing file: " + e.getMessage());
            return;
        }

        // IF ORDER FOUND, REPLACE ORIGINAL FILE TO TEMPFILE
        if (isOrderFound) {
            if (inputFile.delete() && tempFile.renameTo(inputFile)) {
                System.out.println("Order Status file updated successfully.");
            } else {
                System.out.println("Failed to update Order Status file.");
            }
        } else {
            System.out.println("Order ID not found or already cancelled.");
            tempFile.delete(); // DELETE TEMP FILE IF NO CHANGE
        }
    }


    
    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        this.setLocationRelativeTo(null);
        refreshData();
    }//GEN-LAST:event_formWindowActivated

    private void CloseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseBtnActionPerformed
        CustomerDashboard CD = new CustomerDashboard(this.customerId);
        this.setVisible(false);
        CD.setVisible(true);
    }//GEN-LAST:event_CloseBtnActionPerformed

    private void CancelOrderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelOrderBtnActionPerformed
        System.out.println("Order ID before cancel:" + this.orderIdToCancel);
        if(this.orderIdToCancel != null && !this.orderIdToCancel.isEmpty()){
            System.out.println(this.orderId);
            ChangeToCancelInOrderStatTxtIfCancel("Order Status.txt", this.orderIdToCancel, 0);
            JOptionPane.showMessageDialog(this, "Your order has been canceled", "System", JOptionPane.INFORMATION_MESSAGE);
        }else{
            System.out.println("No Item selected for deleting.");
        }
        refreshData();
    }//GEN-LAST:event_CancelOrderBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrderStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrderStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrderStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrderStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OrderStatus().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AppsNameLbl;
    private javax.swing.JLabel AppsNameLbl1;
    private javax.swing.JButton CancelOrderBtn;
    private javax.swing.JButton CloseBtn;
    private javax.swing.JTable OrderStat;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
